{"ast":null,"code":"var _jsxFileName = \"/home/muhammad/Desktop/practice/src/index.js\";\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import * as serviceWorker from './serviceWorker';\n// import './lit.css'\n// function Room() {  \n//   const [isLit,setLit]=React.useState(true);\n//   const  brightness= isLit ? 'lit':'dark';   \n//   return (\n//     <div className={'room ${brightness}'} >\n//       this room is {brightness}<br />\n//     <button onClick={() => setLit(!isLit)}>Flip</button>\n//     </div>\n//   );\n// }\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <Room/>\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./lit.css\";\n\nfunction Room() {\n  const [isLit, setLit] = React.useState(true);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `room ${isLit ? \"lit\" : \"dark\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, \"the room is \", isLit ? \"lit\" : \"dark\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setLit(!isLit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, \"flip\"));\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(Room, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 17\n  }\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/home/muhammad/Desktop/practice/src/index.js"],"names":["React","ReactDOM","Room","isLit","setLit","useState","render","document","getElementById"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AAKA;AAKA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAIA;AACA;AAqBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,WAAP;;AAEA,SAASC,IAAT,GAAgB;AACd,QAAM,CAACC,KAAD,EAAQC,MAAR,IAAkBJ,KAAK,CAACK,QAAN,CAAe,IAAf,CAAxB;AAGA,sBACE;AAAK,IAAA,SAAS,EAAG,QAAOF,KAAK,GAAG,KAAH,GAAW,MAAO,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACeA,KAAK,GAAG,KAAH,GAAW,MAD/B,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAQ,IAAA,OAAO,EAAE,MAAMC,MAAM,CAAC,CAACD,KAAF,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,CADF;AAOD;;AAEDF,QAAQ,CAACK,MAAT,eAAgB,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAA0BC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA1B","sourcesContent":["// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import * as serviceWorker from './serviceWorker';\n\n\n\n\n// import './lit.css'\n\n\n\n\n// function Room() {  \n//   const [isLit,setLit]=React.useState(true);\n//   const  brightness= isLit ? 'lit':'dark';   \n \n//   return (\n\n//     <div className={'room ${brightness}'} >\n//       this room is {brightness}<br />\n//     <button onClick={() => setLit(!isLit)}>Flip</button>\n    \n//     </div>\n\n\n\n//   );\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <Room/>\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n\n\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./lit.css\";\n\nfunction Room() {\n  const [isLit, setLit] = React.useState(true);\n  \n\n  return (\n    <div className={`room ${isLit ? \"lit\" : \"dark\"}`}>\n      the room is {isLit ? \"lit\" : \"dark\"}\n      <br />\n      <button onClick={() => setLit(!isLit)}>flip</button>\n    </div>\n  );\n}\n\nReactDOM.render(<Room />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}